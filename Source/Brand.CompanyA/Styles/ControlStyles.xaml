<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:local="clr-namespace:Brand.Styles">

    <!-- Merged resources -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Brand.Fallback;component/Styles/ControlStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
        Styles shamelessly copied from http://mahapps.com/.
        This projects contains its license.
    -->
    
    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:ToLowerConverter x:Key="ToLowerConverter" />
    <local:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />

    <!-- Fonts -->
    <FontFamily x:Key="DefaultFont">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    <FontFamily x:Key="ContentFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
    
    <!-- Colors -->
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="Gray2">#FF7F7F7F</Color>
    <Color x:Key="Gray6">#FFCCCCCC</Color>
    <Color x:Key="Gray8">#FFE0E0E0</Color>
    <Color x:Key="HighlightColor">#FF477D11</Color>
    <Color x:Key="AccentColor">#CC60A917</Color>
    <Color x:Key="IdealForegroundColor">White</Color>
    
    <!-- Brushes -->
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" />
    <SolidColorBrush x:Key="TransparentWhiteBrush" Color="#00FFFFFF"/>
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="GrayBrush8" Color="{StaticResource Gray8}"/>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="ControlsDisabledBrush" Color="#A5FFFFFF" />
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Gray6}" />
    <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="{StaticResource BlackColor}" />
    <SolidColorBrush x:Key="TextBoxMouseOverBorderBrush" Color="{StaticResource Gray2}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="ControlsValidationBrush" Color="#FFDB000C" options:Freeze="True" />
    <SolidColorBrush x:Key="ValidationBrush5" Color="#FFDC000C" options:Freeze="True" />

    <!-- TextBox style -->
    <ControlTemplate x:Key="ChromelessButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter
                x:Name="contentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                RecognizesAccessKey="True"
                Opacity="0.75" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ChromelessButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource ChromelessButtonTemplate}" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="local:TextboxHelper.IsMonitoring" Value="True" />
        <Setter Property="local:ControlsHelper.ButtonWidth" Value="22" />
        <Setter Property="SelectionBrush" Value="{StaticResource HighlightBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="local:TextboxHelper.FocusBorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}" />
        <Setter Property="local:TextboxHelper.MouseOverBorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />
        <!-- change SnapsToDevicePixels to True to view a better border and validation error -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CaretBrush" Value="{StaticResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                To=".2"
                                Storyboard.TargetProperty="Opacity"
                                Storyboard.TargetName="Message" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetProperty="Opacity"
                                Storyboard.TargetName="Message" />
                        </Storyboard>

                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                From=".2"
                                To="0"
                                Storyboard.TargetProperty="Opacity"
                                Storyboard.TargetName="Message" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                Storyboard.TargetProperty="Opacity"
                                Storyboard.TargetName="Message" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle
                            x:Name="Base"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}"
                            Fill="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="FocusRectangle"
                            Visibility="Collapsed"
                            StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}" />
                        <Grid
                            x:Name="PART_InnerGrid"
                            Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ControlsHelper.ButtonWidth), Mode=OneWay}" />
                            </Grid.ColumnDefinitions>

                            <Border
                                x:Name="ReadOnlyVisualElement"
                                Grid.ColumnSpan="2"
                                Background="{x:Null}"
                                Opacity="0" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="0"
                                BorderThickness="0"
                                IsTabStop="False"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}" />
                            <TextBlock
                                x:Name="Message"
                                Grid.Column="0"
                                Text="{TemplateBinding local:TextboxHelper.Watermark}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="Collapsed"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Opacity="0.6"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="6,2,6,2" />
                            <Button
                                x:Name="PART_ClearText"
                                Grid.Column="1"
                                Style="{StaticResource ChromelessButtonStyle}"
                                FontSize="16"
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:TextboxHelper.ButtonFontFamily), Mode=OneWay}"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:TextboxHelper.ButtonContent), Mode=OneWay}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:TextboxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsTabStop="False" />
                        </Grid>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Stroke="{StaticResource ControlsDisabledBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}"
                            Fill="{StaticResource ControlsDisabledBrush}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!-- multiline textbox cannot bind to actual height so take the fallback button width -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextWrapping" Value="NoWrap" />
                                <Condition Property="AcceptsReturn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonColumn" Property="Width" Value="{Binding ElementName=PART_InnerGrid, Path=ActualHeight, Mode=OneWay}" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(local:TextboxHelper.ClearTextButton)}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:TextboxHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:TextboxHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{StaticResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{StaticResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{StaticResource WhiteBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:TextboxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="local:TextboxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="local:TextboxHelper.IsWaitingForData" Value="True">
                            <Setter TargetName="Base" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="{StaticResource BlackColor}" Opacity="0" BlurRadius="10" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            From="0"
                                            To="1"
                                            Storyboard.TargetName="Base"
                                            Storyboard.TargetProperty="(Effect).Opacity"
                                            Duration="00:00:02"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="local:TextboxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="Base" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Button styles -->
    <Style x:Key="SquareButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.BorderThickness)"
                                            Storyboard.TargetName="MouseOverBorder">
                                            <EasingThicknessKeyFrame
                                                KeyTime="0"
                                                Value="2" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.BorderThickness)"
                                            Storyboard.TargetName="MouseOverBorder">
                                            <EasingThicknessKeyFrame
                                                KeyTime="0"
                                                Value="0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Border.BorderThickness)"
                                            Storyboard.TargetName="PressedBorder">
                                            <EasingThicknessKeyFrame
                                                KeyTime="0"
                                                Value="2" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="Background"
                            BorderBrush="{StaticResource BlackBrush}"
                            BorderThickness="2"
                            Background="{TemplateBinding Background}" />
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="{StaticResource ControlsDisabledBrush}"
                            IsHitTestVisible="false"
                            Opacity="0" />
                        <Border
                            x:Name="MouseOverBorder"
                            Background="{StaticResource GrayBrush8}"
                            Opacity="0" />
                        <Border
                            x:Name="PressedBorder"
                            Background="{StaticResource BlackBrush}"
                            Opacity="0"
                            BorderBrush="{StaticResource BlackBrush}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content, Converter={StaticResource ToLowerConverter}}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            OpacityMask="{x:Null}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource IdealForegroundColorBrush}" />
    </Style>

</ResourceDictionary>